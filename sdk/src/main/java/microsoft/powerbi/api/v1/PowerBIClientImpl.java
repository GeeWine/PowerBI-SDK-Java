/**
 * Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package microsoft.powerbi.api.v1;

import com.microsoft.rest.credentials.ServiceClientCredentials;
import com.microsoft.rest.ServiceClient;
import com.microsoft.rest.AutoRestBaseUrl;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

/**
 * Initializes a new instance of the PowerBIClient class.
 */
public final class PowerBIClientImpl extends ServiceClient implements PowerBIClient {
    /**
     * The URL used as the base for all cloud service requests.
     */
    private final AutoRestBaseUrl baseUrl;

    /**
     * Gets the URL used as the base for all cloud service requests.
     *
     * @return The BaseUrl value.
     */
    public AutoRestBaseUrl getBaseUrl() {
        return this.baseUrl;
    }

    /** Subscription credentials which uniquely identify client subscription. */
    private ServiceClientCredentials credentials;

    /**
     * Gets Subscription credentials which uniquely identify client subscription.
     *
     * @return the credentials value.
     */
    public ServiceClientCredentials getCredentials() {
        return this.credentials;
    }

    /**
     * Sets Subscription credentials which uniquely identify client subscription.
     *
     * @param credentials the credentials value.
     */
    public void setCredentials(ServiceClientCredentials credentials) {
        this.credentials = credentials;
    }

    /**
     * Gets the DatasetsOperations object to access its operations.
     * @return the DatasetsOperations object.
     */
    public DatasetsOperations getDatasetsOperations() {
        return new DatasetsOperationsImpl(this.retrofitBuilder.client(clientBuilder.build()).build(), this);
    }

    /**
     * Gets the GatewaysOperations object to access its operations.
     * @return the GatewaysOperations object.
     */
    public GatewaysOperations getGatewaysOperations() {
        return new GatewaysOperationsImpl(this.retrofitBuilder.client(clientBuilder.build()).build(), this);
    }

    /**
     * Gets the ImportsOperations object to access its operations.
     * @return the ImportsOperations object.
     */
    public ImportsOperations getImportsOperations() {
        return new ImportsOperationsImpl(this.retrofitBuilder.client(clientBuilder.build()).build(), this);
    }

    /**
     * Gets the WorkspacesOperations object to access its operations.
     * @return the WorkspacesOperations object.
     */
    public WorkspacesOperations getWorkspacesOperations() {
        return new WorkspacesOperationsImpl(this.retrofitBuilder.client(clientBuilder.build()).build(), this);
    }

    /**
     * Gets the ReportsOperations object to access its operations.
     * @return the ReportsOperations object.
     */
    public ReportsOperations getReportsOperations() {
        return new ReportsOperationsImpl(this.retrofitBuilder.client(clientBuilder.build()).build(), this);
    }

    
    public PowerBIClientImpl(ServiceClientCredentials creds) {
        super();
        this.credentials = creds;
        this.baseUrl = new AutoRestBaseUrl("https://api.powerbi.com");
        initialize();
    }
    
    /**
     * Initializes an instance of PowerBIClient client.
     */
    public PowerBIClientImpl() {
        this("https://api.powerbi.com");
    }

    /**
     * Initializes an instance of PowerBIClient client.
     *
     * @param baseUrl the base URL of the host
     */
    public PowerBIClientImpl(String baseUrl) {
        super();
        this.baseUrl = new AutoRestBaseUrl(baseUrl);
        initialize();
    }

    /**
     * Initializes an instance of PowerBIClient client.
     *
     * @param baseUrl the base URL of the host
     * @param clientBuilder the builder for building up an {@link OkHttpClient}
     * @param retrofitBuilder the builder for building up a {@link Retrofit}
     */
    public PowerBIClientImpl(String baseUrl, OkHttpClient.Builder clientBuilder, Retrofit.Builder retrofitBuilder) {
        super(clientBuilder, retrofitBuilder);
        this.baseUrl = new AutoRestBaseUrl(baseUrl);
        initialize();
    }

    @Override
    protected void initialize() {
        if (this.credentials != null)
        {
            this.credentials.applyCredentialsFilter(clientBuilder);
        }
        super.initialize();
        this.retrofitBuilder.baseUrl(baseUrl);
    }
}
